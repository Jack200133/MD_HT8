cafeina <- read.table(file="clipboard",header=T)
summary(cafeina$Caffeine)
summary(cafeina$Caffeine)
hist(cafeina$Caffeine, col="red")
cafeina <- read.table(file="clipboard",header=T)
summary(cafeina$Caffeine)
hist(cafeina$Caffeine, col="red")
media <- mean(cafeina$Caffeine)
mediana <- median(cafeina$Caffeine)
desv <- sd(cafeina$Caffeine)
abline(v=c(media,mediana), col=c("green","blue"),lwd=2)
grupo1 = rnomr(100, media, desv)
grupo1 = rnomr(100, media, desv)
grupo1 = rnorm(100, media, desv)
hist(grupo1)
grupo1 = rnorm(500, media, desv)
hist(grupo1)
grupo2 = rnorm(500, media + 0.025, desv)
hist(grupo2)
mezcla = c(grupo1, grupo2)
hist(mezcla)
grupo2 = rnorm(500, media + 0.035, desv)
mezcla = c(grupo1, grupo2)
hist(mezcla)
grupo2 = rnorm(500, media + 0.045, desv)
mezcla = c(grupo1, grupo2)
hist(mezcla)
pobl = rnorm(1000, 175, 4)
pobl2 = rnorm(1000, 162, 4)
mezcla = c(pobl, pobl2)
hist(mezcla)
boxplot(cafeina$Caffeine, col="red")
abline(h=media,col="green")
plot(density(cafeina$Caffeine,bw=0.009),col="red")
estmedia = 165
desvest = 5
estmedia + c(-1, 1) * desvest
estmedia + c(-2, 2) * desvest
estmedia + c(-3, 3) * desvest
intervalo3sigma <- c(-3,3)*desv+media
abline(v=intervalo3sigma, col="black",lwd=2)
intervalo3sigma <- c(-4,4)*desv+media
abline(v=intervalo3sigma, col="black",lwd=2)
abline(v=intervalo3sigma, col="black",lwd=2)
intervalo3sigma <- c(-3,3)*desv+media
abline(v=intervalo3sigma, col="black",lwd=2)
plot(density(cafeina$Caffeine,bw=0.009),col="red")
intervalo3sigma <- c(-3,3)*desv+media
abline(v=intervalo3sigma, col="black",lwd=2)
abajo <- sum(cafeina$Caffeine<intervalo3sigma[1])
arriba <- sum(cafeina$Caffeine>intervalo3sigma[2])
abajo + arriba
sum(cafeina$Caffeine<intervalo3sigma[1])
intervalo3sigma <- c(-2,2)*desv+media
abajo <- sum(cafeina$Caffeine<intervalo3sigma[1])
arriba <- sum(cafeina$Caffeine>intervalo3sigma[2])
abajo + arriba
intervalo3sigma <- c(-3,3)*desv+media
abajo <- sum(cafeina$Caffeine<intervalo3sigma[1])
arriba <- sum(cafeina$Caffeine>intervalo3sigma[2])
arriba <- sum(cafeina$Caffeine>intervalo3sigma[2])
abajo + arriba
install.packages("SixSigma")
library(SixSigma)
ss.ci(cafeina$Caffeine)
shapiro.test(cafeina$Caffeine)
t.test(cafeina$Caffeine,mu=0.08)
t.test(cafeina$Caffeine,mu=0.1)
par(mfrow=c(1,1))
num <- seq(1,length(cafeina$Caffeine))
plot(num,cafeina$Caffeine,type="l",col="red",ylim=c(0,0.15))
abline(h=c(intervalo3sigma[1],media,intervalo3sigma[2]),col="green")
seq(1, 100)
seq(1, 100, 4)
par(mfrow=c(1,1))
num <- seq(1,length(cafeina$Caffeine))
plot(num,cafeina$Caffeine,type="l",col="red",ylim=c(0,0.15))
abline(h=c(intervalo3sigma[1],media,intervalo3sigma[2]),col="green")
cafeina2 <- read.table(file="clipboard",header=T)
cafeina2 <- read.table(file="clipboard",header=T)
par(mfrow=c(1,2))
hist(cafeina2$Caffeine,col="blue", main="Histograma % de Cafe?na", xlab="% cafe?na residual")
boxplot(cafeina2$Caffeine, col="blue",main="Gr?fico de Cajas % de Cafe?na",ylab="% cafe?na residual")
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
qplot(as.factor(Extractor), Caffeine, geom="boxplot", fill=as.factor(Extractor),data=cafeina2)
qplot(as.factor(Batch), Caffeine, geom="boxplot", fill=as.factor(Extractor),data=cafeina2)
qplot(as.factor(Batch), Caffeine, geom="boxplot", fill=as.factor(Batch),data=cafeina2)
maquinas <- read.table(file="clipboard", header=T)
head(maquinas, 10)
summary(maquinas)
hist(maquinas$Vol, col="green")
media <- mean(maquinas$Vol)
mediana <- median(maquinas$Vol)
abline(v=media, col="red")
abline(v=mediana,col="blue")
boxplot(maquinas$Vol, col="green")
abline(h=media)
tapply(maquinas$Vol, maquinas$Maq, summary)
tapply(maquinas$Vol, maquinas$Maq, hist)
par(mfrow=c(2,1))
maq1 <- maquinas$Vol[maquinas$Maq==1]
maq2 <- maquinas$Vol[maquinas$Maq==2]
media1 <- mean(maq1)
mediana1 <- median(maq1)
media2 <- mean(maq2)
mediana2 <- median(maq2)
hist(maq1,col="cyan", xlim=c(310,400))
hist(maq1,col="cyan", xlim=c(310,400))
abline(v=media1,col="red")
maq1 <- maquinas$Vol[maquinas$Maq==1]
maq2 <- maquinas$Vol[maquinas$Maq==2]
hist(maq1,col="cyan", xlim=c(310,400))
##  graficar los histogramas
par(1:30)
##  graficar los histogramas
par(1,30)
##  graficar los histogramas
plot(1:30)
hist(maq1,col="cyan", xlim=c(310,400))
##  graficar los histogramas
hist(maq1,col="cyan", xlim=c(310,400))
##  graficar los histogramas
hist(maq1,col="cyan", xlim=c(310,400))
abline(v=media1,col="red")
abline(v=mediana1, col="blue")
hist(maq2,col="pink", xlim=c(310,400))
abline(v=media2,col="red")
abline(v=mediana2, col="blue")
par(mfrow=c(1,1))
boxplot(Vol ~ Maq, data=maquinas, col=c("cyan", "pink"))
head(maquinas, 10)
summary(maquinas)
hist(maquinas$Vol, col="green")
media <- mean(maquinas$Vol)
mediana <- median(maquinas$Vol)
abline(v=media, col="red")
abline(v=mediana,col="blue")
tapply(maquinas$Vol, maquinas$Maq, summary)
tapply(maquinas$Vol, maquinas$Maq, hist)
par(mfrow=c(2,1))
maq1 <- maquinas$Vol[maquinas$Maq==1]
maq2 <- maquinas$Vol[maquinas$Maq==2]
media1 <- mean(maq1)
mediana1 <- median(maq1)
media2 <- mean(maq2)
mediana2 <- median(maq2)
##  graficar los histogramas
hist(maq1,col="cyan", xlim=c(310,400))
abline(v=media1,col="red")
abline(v=mediana1, col="blue")
hist(maq2,col="pink", xlim=c(310,400))
abline(v=media2,col="red")
abline(v=mediana2, col="blue")
hist(maquinas$Vol, col="green")
media <- mean(maquinas$Vol)
mediana <- median(maquinas$Vol)
abline(v=media, col="red")
abline(v=mediana,col="blue")
par(mfrow=c(1,1))
hist(maquinas$Vol, col="green")
media <- mean(maquinas$Vol)
mediana <- median(maquinas$Vol)
abline(v=media, col="red")
abline(v=mediana,col="blue")
media
mediana
boxplot(maquinas$Vol, col="green")
abline(h=media)
boxplot(maquinas$Vol, col="green")
maq1 <- maquinas$Vol[maquinas$Maq==1]
maq2 <- maquinas$Vol[maquinas$Maq==2]
media1 <- mean(maq1)
mediana1 <- median(maq1)
media2 <- mean(maq2)
mediana2 <- median(maq2)
##  graficar los histogramas
hist(maq1,col="cyan", xlim=c(310,400))
abline(v=media1,col="red")
abline(v=mediana1, col="blue")
hist(maq2,col="pink", xlim=c(310,400))
abline(v=media2,col="red")
abline(v=mediana2, col="blue")
par(mfrow=c(2,1))
##  graficar los histogramas
hist(maq1,col="cyan", xlim=c(310,400))
abline(v=media1,col="red")
abline(v=mediana1, col="blue")
hist(maq2,col="pink", xlim=c(310,400))
abline(v=media2,col="red")
abline(v=mediana2, col="blue")
par(mfrow=c(1,1))
boxplot(Vol ~ Maq, data=maquinas, col=c("cyan", "pink"))
media1
mediana1
par(mfrow=c(1,1))
boxplot(Vol ~ Maq, data=maquinas, col=c("cyan", "pink"))
advertising =  read.table("clipboard", header=T) # Windows
advertising =  read.table("clipboard", header=T) # Windows
plot(advertising)
dim(advertising)
set.seed(666)
muestra = sample(1:200, 30, replace=F)
muestra
train =  advertising[-muestra,]
train
test  =  advertising[muestra,]
modelo1 =  lm(Sales ~ TV + Radio + Newspaper, data=train)
summary(modelo1)
modelo2 =  lm(Sales ~ TV + Radio, data = train)
summary(modelo2)
pred = predict(modelo2, newdata=test)
sum((pred - test$Sales)^2)
plot(pred, test$Sales)
plot(advertising)
pred = predict(modelo2, newdata=test)
modelo1 =  lm(Sales ~ TV + Radio + Newspaper, data=train)
summary(modelo1)
modelo2 =  lm(Sales ~ TV + Radio, data = train)
summary(modelo2)
pred = predict(modelo2, newdata=test)
sum((pred - test$Sales)^2)
plot(pred, test$Sales)
modelo3 = lm(Sales ~ TV, data=train)
summary(modelo3)
pred2 = predict(modelo3, newdata=test)
sum((pred2 - test$Sales)^2)
plot(pred2, test$Sales)
radio = 60
tele = 250
dato = data.frame(TV = tele, Radio = radio)
predict(modelo2, newdata=dato)
plot(pred, test$Sales)
sum((pred - test$Sales)^2)
plot(advertising)
summary(modelo1)
plot(pred, test$Sales)
predict(modelo2, newdata=dato)
dato
fecha1 = '2022-01-01'
fecha1
fecha2 = as.Date(fecha1)
fechas <- seq(as.Date("2018-01-01"), as.Date("2018-06-30"), by="2 months")
head(fechas)
length(fechas)
diasdevida <- seq(as.Date("1980-01-01"), as.Date("2020-7-30"), by="1 days")
head(diasdevida)
length(diasdevida)
chupidays <- seq(as.Date('2001-01-02'), as.Date('2022-10-14'), by="1 days")
head(chupidays)
length(chupidays)
secfechas <- seq(as.Date("2001-07-02"), length=50, by="months")
head(secfechas)
length(secfechas)
length(chupidays)
vec1 = 1:100
## Generemos una serie mensual
serie1 <- ts(vec1, start=c(2020,7),frequency=12)
serie1
## Generemos una serie trimestral
serie2 =  ts(vec1, start=c(2020,1),frequency=4)
serie2
install.packages("lubridate")
library(lubridate)
wday(diasdevida[2384],label=T)
wday(diasdevida[2384])
wday(as.Date("2020-07-30"),label=T)
wday(diasdevida[2384],label=T)
wday(as.Date(now("GMT")))
wday(as.Date("2001-01-02"))
dmy("1/7/2020")
mdy("7/1/2020")
ymd("2020/7/1")
ydm("2020/1/7")
dmy("1-7-2020")
dmy("1 jul 2020")
dmy("1/7/2020") + days(45)
dmy("1/7/2020") + weeks(10)
dmy("1/7/2020") + months(5)
secuencia1 <- seq(as.Date("2014-07-13"), as.Date("2020-07-30"), by="1 weeks")
head(secuencia1)
secuencia2 <- format(secuencia1, "%d/%m/%Y")
head(secuencia2)
nacimientos <- scan("http://robjhyndman.com/tsdldata/data/nybirths.dat")
plot.ts(stnacimientos)
stnacimientos <- ts(nacimientos, frequency=12, start=c(1946,1))
plot.ts(stnacimientos)
stnacimientoscomp <- decompose(stnacimientos)
plot(stnacimientoscomp)
nacpred <- HoltWinters(stnacimientos)
nacpred
## Plotear la serie original junto con el modelo HoltWinters
plot(nacpred)
## hacer un pronostico de la serie para 12 meses
pronostico1 <- predict(nacpred, n.ahead = 12, prediction.interval = T, level = 0.95)
## hacer un pronostico de la serie para 12 meses
pronostico1 <- predict(nacpred, n.ahead = 12, prediction.interval = T, level = 0.95)
## Plotear la serie y el pronostico
plot(nacpred, pronostico1)
## hacer un pronostico de la serie para 12 meses
pronostico1 <- predict(nacpred, n.ahead = 48, prediction.interval = T, level = 0.95)
## Plotear la serie y el pronostico
plot(nacpred, pronostico1)
## hacer un pronostico de la serie para 12 meses
pronostico1 <- predict(nacpred, n.ahead = 3, prediction.interval = T, level = 0.95)
## Plotear la serie y el pronostico
plot(nacpred, pronostico1)
## hacer un pronostico de la serie para 12 meses
pronostico1 <- predict(nacpred, n.ahead = 3, prediction.interval = T, level = 0.95)
## Plotear la serie y el pronostico
plot(nacpred, pronostico1)
## hacer un pronostico de la serie para 12 meses
pronostico1 <- predict(nacpred, n.ahead = 12, prediction.interval = T, level = 0.95)
## Plotear la serie y el pronostico
plot(nacpred, pronostico1)
## hacer un pronostico de la serie para 12 meses
pronostico1 <- predict(nacpred, n.ahead = 24, prediction.interval = T, level = 0.95)
## Plotear la serie y el pronostico
plot(nacpred, pronostico1)
## hacer un pronostico de la serie para 12 meses
pronostico1 <- predict(nacpred, n.ahead = 3, prediction.interval = T, level = 0.95)
## Plotear la serie y el pronostico
plot(nacpred, pronostico1)
library(forecast)
ventas <- read.table(file="clipboard",header=T)
ventas <- read.table(file="clipboard",header=T)
ventas <- read.table(file="clipboard",header=T)
head(ventas)
serieVentas <- ts(ventas$Sales,start=2002,frequency=12)
serieVentas
plot.ts(serieVentas)
componentes <- decompose(serieVentas)
plot(componentes)
numpred <- 12
pronostico = forecast(serieVentas, numpred)
plot(pronostico)
plot(componentes)
maquinas <- read.table(file="clipboard", header=T)
produccion <- read.table(file="clipboard", header=T)
head(maquinas, 10)
produccion <- read.table(file="clipboard", header=T)
head(produccion, 10)
serie1 <- ts(vec1, start=c(1962,1),frequency=12)
serie1''
serie1
source("~/.active-rstudio-document", echo=TRUE)
serie1 <- ts(produccion$milk, start=c(1962,1),frequency=12)
serie1 <- ts(produccion$Milk, start=c(1962,1),frequency=12)
head(produccion, 10)
produccion
produccion <- read.table(file="clipboard", header=T)
produccion
produccion$Milk
produccion$Month.mil
produccion$Month.Milk
produccion <- read.table(file="clipboard", header=T)
produccion <- read.table(file="clipboard", header=T)
serie1 <- ts(produccion, start=c(1962,1),frequency=12)
serie1
plo.ts(serie1)
plot.ts(serie1)
produccion <- read.table(file="clipboard", header=T)
head(produccion, 10)
serie1 <- ts(produccion$Milk, start=c(1962,1),frequency=12)
plot.ts(serie1)
serie1
decompose(serie1)
library(forecast)
decompose(serie1)
decomposed <- decompose(serie1)
plot(decomposed)
## Grafico
plot.ts(serie1)
plot.ts(serieVentas)
componentes <- decompose(serieVentas)
plot(componentes)
plot(decomposed)
## Grafico
plot.ts(serie1)
plot(decomposed)
plot(componentes)
plot(decomposed)
## Grafico
plot.ts(serie1)
plot(decomposed)
library(forecast)
prediction_months <- 12
forecast(serie1, prediction_months)
forecast <- forecast(serie1, prediction_months)
plot(forecast)
forecast
plot(forecast)
ar <- auto.arima(forecast)
ar <- auto.arima(serie1)
plot(ar)
ar <- auto.arima(serie1)
plot(ar)
pronosticoArima <- forecast(ar, numpred)
plot(pronosticoArima)
plot(forecast)
## HoltWinters
venpred <- HoltWinters(serie1)
plot(holtPred)
## HoltWinters
holtPred <- HoltWinters(serie1)
plot(holtPred)
fcHolt <- forecast(holtPred, numpred)
plot(fcHolt)
accuracy(fcHolt)
accuracy(forecast)
accuracy(pronosticoArima)
accuracy(forecast)
accuracy(pronosticoArima)
accuracy(fcHolt)
install.packages("tidyverse")
ToothGrowth
qqnorm(ToothGrowth$len)
qqline(ToothGrowth$len, col="red")
shapiro.test(ToothGrowth$len)
setwd("C:/Users/Daniel/Main/UVG/Semestre VII/Minería de datos/HT1")
knitr::opts_chunk$set(echo = TRUE)
films <- read.csv("movies.csv")
shapiro.test(films$bugdet)
films$budget
sum(is.na(films$budget))
films$budget
shapiro.test(films$bugdet)
class(films$budget)
shapiro.test(as.numeric(films$budget))
budget <- as.numeric(films$budget)
lillie.test(budget)
library(nortest)
lillie.test(budget)
lillie.test(films$budget)
shapiro.test(films$runtime)
shapiro.test(films[1:5000, films$runtime])
shapiro.test(films[films$runtime, 1:5000])
films[films$runtime,]
films[,films$runtime]
films[,1:5000]$runtime
films[1:5000,]$runtime
shapiro.test(films[1:5000,]$runtime)
head(films$popularity)
films$popularity
ordered <- films[order(films$budget, decreasing=T),]
firstTenMovies <- ordered[1:10,]
firstTenMovies[, c("title", "budget")]
head(iris)
install.packages("rlang")
install.packages("rlang")
setwd("C:/Users/Daniel/Main/UVG/Semestre VII/Minería de datos/MD_HDT7")
